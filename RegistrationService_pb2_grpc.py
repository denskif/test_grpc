# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RegistrationService_pb2 as RegistrationService__pb2


class RegistrationServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterClientByEmail = channel.unary_unary(
        '/egt.registration.v2.com.RegistrationService/RegisterClientByEmail',
        request_serializer=RegistrationService__pb2.RegisterClientByEmailRequest.SerializeToString,
        response_deserializer=RegistrationService__pb2.RegisterClientResponse.FromString,
        )
    self.SendRegistrationCodeToPhone = channel.unary_unary(
        '/egt.registration.v2.com.RegistrationService/SendRegistrationCodeToPhone',
        request_serializer=RegistrationService__pb2.SendRegistrationCodeToPhoneRequest.SerializeToString,
        response_deserializer=RegistrationService__pb2.SendRegistrationCodeToPhoneResponse.FromString,
        )
    self.RegisterClientByPhone = channel.unary_unary(
        '/egt.registration.v2.com.RegistrationService/RegisterClientByPhone',
        request_serializer=RegistrationService__pb2.RegisterClientByPhoneRequest.SerializeToString,
        response_deserializer=RegistrationService__pb2.RegisterClientResponse.FromString,
        )


class RegistrationServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterClientByEmail(self, request, context):
    """Possible errors:
    grpc.Status [code: INVALID_ARGUMENT] [message: Invalid arguments]
    errors details: BadRequest: FieldViolations

    grpc.Status [code: ALREADY_EXISTS] [message: Client with email already exist]
    errors details: PreconditionFailure: Violation: type
    -   EMAIL_ALREADY_EXISTS
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendRegistrationCodeToPhone(self, request, context):
    """Init registration client by phone.
    Possible errors:
    grpc.Status [code: INVALID_ARGUMENT] [message: Invalid arguments]
    errors details: BadRequest: FieldViolations

    grpc.Status [code: ALREADY_EXISTS] [message: Client with email already exist]
    errors details: PreconditionFailure: Violation: type
    -   LOGIN_ALREADY_EXISTS
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterClientByPhone(self, request, context):
    """Finish client registration by phone.
    Possible errors:
    grpc.Status [code: INVALID_ARGUMENT] [message: Invalid arguments]
    errors details: BadRequest: FieldViolations

    grpc.Status [code: ALREADY_EXISTS] [message: Client with email already exist]
    errors details: PreconditionFailure: Violation: type
    -   VERIFICATION_CODE_NOT_VALID
    -   VERIFICATION_CODE_EXPIRED
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RegistrationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterClientByEmail': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterClientByEmail,
          request_deserializer=RegistrationService__pb2.RegisterClientByEmailRequest.FromString,
          response_serializer=RegistrationService__pb2.RegisterClientResponse.SerializeToString,
      ),
      'SendRegistrationCodeToPhone': grpc.unary_unary_rpc_method_handler(
          servicer.SendRegistrationCodeToPhone,
          request_deserializer=RegistrationService__pb2.SendRegistrationCodeToPhoneRequest.FromString,
          response_serializer=RegistrationService__pb2.SendRegistrationCodeToPhoneResponse.SerializeToString,
      ),
      'RegisterClientByPhone': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterClientByPhone,
          request_deserializer=RegistrationService__pb2.RegisterClientByPhoneRequest.FromString,
          response_serializer=RegistrationService__pb2.RegisterClientResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'egt.registration.v2.com.RegistrationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
